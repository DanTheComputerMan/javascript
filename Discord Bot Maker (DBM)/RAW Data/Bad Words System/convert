{
  "name": "convert",
  "permissions": "NONE",
  "restriction": "1",
  "_id": "WUyXw",
  "actions": [
    {
      "code": "// Javascript code here. Do NOT edit this or you will likely break it.\nconst https = require('https');\nconst ensure = this.getMods().require;\nconst db = ensure('quick.db');\nconst { inspect } = require('util');\n\nfunction ensurePath(path, obj, def) { // def = default value (optional; defaults to empty object). Built in checking if object already exists. If it does not exist, creates the path.\n\tfor(let i = 0; i < path.length; i++) {\n        obj = obj[path[i]] = obj[path[i]] || ((def !== undefined && (i === path.length - 1)) ? def : {});\n    }\n}\n\n\nfunction trim(str) { // Trims leading and trailing spaces from a string.\n\treturn str.replace(/^\\s+|\\s+$/gm,'');\n}\n\nfunction PermCase(arr, symbol) {\n\tif (!symbol) symbol = \" \";\n\tlet new_arr = [];\n\tarr.forEach(elem => {\n\t\tif (Object.prototype.toString.call(elem) === '[object String]') { // this case is only usable for Discord Permission format.\n\t\t\tnew_arr.push(elem.replace(/_/g,' ').replace(/\\w+/g, (t) => `${t[0].toUpperCase() + t.slice(1, Infinity).toLowerCase()}` ));\n\t\t} else {\n\t\t\tnew_arr.push(elem);\n\t\t}\n\t});\n    return new_arr.join(symbol);\n}\n\nconst badwordsystem = db.get(`servers.${msg.guild.id}.badwordsystem`) || {};\n\nensurePath(['status'], badwordsystem, false);\nensurePath(['config', 'defaults', 'config'], badwordsystem);\nensurePath(['config', 'badwordlog', 'channelid'], badwordsystem, '');\nensurePath(['config', 'actionlog', 'channelid'], badwordsystem, '');\nensurePath(['config', 'commands', 'disabled'], badwordsystem, []);\n\nconst enabled = badwordsystem.status;\nconst badwordlogchannel = bot.channels.cache.get(badwordsystem.config.badwordlog.channelid) || ''; // In case no channel exists anymore for the stored ChannelID.\nconst actionlogchannel = bot.channels.cache.get(badwordsystem.config.actionlog.channelid) || ''; // In case no channel exists anymore for the stored ChannelID.\n\nconst prefix = (server && server.tag) || this.getDBM().Files.data.settings.tag || \"!\";\nconst args = msg.content.slice(prefix.length).trim().split(/ +/g); \nconst command = args[0]; args.shift();\n\nconst configperms = [ 'BAN_MEMBERS', 'KICK_MEMBERS', 'MANAGE_MESSAGES' ];\nconst msgperms = [ 'ATTACH_FILES', 'SEND_MESSAGES' ];\n\nconst selfperms = configperms.every(p => msg.guild.me.hasPermission(p));\nconst userperms = configperms.some(p => member.hasPermission(p));\nconst messageperms = msgperms.every(p => msg.channel.permissionsFor(bot.user.id).has(p));\n\nconst url = `https://github.com/DanTheComputerMan/javascript/tree/master/Discord%20Bot%20Maker%20(DBM)/RAW%20Data/Bad%20Words%20System`;\nconst tutorial = `For more info, visit the [GitHub](${url}) page.`;\nlet list = []; const defaults = badwordsystem.config.defaults;\nlet content = \"\", str = \"\", file_url = \"\", attachment;\nif (!userperms || !selfperms) {\n\tcontent = `? don't have the appropriate permissions to perform this command. ? need: ${PermCase(!userperms ? configperms : msgperms, ', ')}`.replace(/\\?/g, (!userperms) ? 'You' : 'I');\n\tmsg.channel.send(content);\n} else {\n\ttry {\n\t\tconst reg = /^((http(s)?)?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)\\/\\w+\\.txt$/\n\t\tfile_url = (msg.attachments.find(att => att.url.match(/\\.txt$/)) && msg.attachments.find(att => att.url.match(/\\.txt$/)).url) || (reg.test(args.join(' ')) && args.join(' ').match(reg)[0]);\n\t\t\n\t\tif (file_url) {\n\t\t\thttps.get(file_url, (resp) => {\n\t\t\t\tlet data = '';\n\t\t\t\tresp.on('data', (chunk) => {\n\t\t\t\t\tdata += chunk;\n\t\t\t\t})\n\t\t\t\tresp.on('end', () => { // data is fully collected.\n\t\t\t\t\tdata = data.split(\"\\r\\n\");\n\t\t\t\t\tfor (line of data) {\n\t\t\t\t\t\tline = {\"word\":line};\n\t\t\t\t\t\tif (defaults.action) line.action = defaults.action;\n\t\t\t\t\t\tif (defaults.mode) line.mode = defaults.mode;\n\t\t\t\t\t\tif (defaults.filters) line.filters = defaults.filters;\n\t\t\t\t\t\t\n\t\t\t\t\t\tlist.push(line);\n\t\t\t\t\t}\n\t\t\t\t\tlist = inspect(list); // Makes the whole list a string.\n\t\t\t\t\t\n\t\t\t\t\tcontent = \"Successfully converted all words.\";\n\t\t\t\t\t\n\t\t\t\t\tconst buffer = Buffer.from(list, 'utf8');\n\t\t\t\t\tattachment = new DiscordJS.MessageAttachment(buffer, 'bws_converted_wordlist.txt');\n\t\t\t\t\t\n\t\t\t\t\tmsg.channel.send(messageperms ? content + \" Attached is a file containing all words you submitted in the proper format.\" : `${content}\\n\\nI do not have permission to attach the file. Here is the file's download URL: **${attachment.url}**`, messageperms ? attachment : null); // auto-handles attachment not existing.\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tcontent = \"Please attach a file or provide a valid link to the file.\";\n\t\t\tmsg.channel.send(content);\n\t\t}\n\t} catch {\n\t\tcontent = \"There was an error parsing your file. Please ensure you are providing a valid file attachment or a valid link to the file.\";\n\t\tmsg.channel.send(content);\n\t}\n}",
      "behavior": "1",
      "interpretation": "1",
      "storage": "0",
      "varName": "",
      "VTypeSelect": "0",
      "CVTypeValue": "",
      "name": "Run Script"
    }
  ],
  "comType": "0"
}
